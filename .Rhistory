"完成所花時間(秒)"=350)
tools=c(
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
name="小明",
"complete"="True",
"usedtime"=350)
tools=c(
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
"name"="小明",
"是否完成"="True",
"完成所花時間(秒)"=350)
tools=c(
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("yy","mm","dd"),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350)
tools=c(
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350)
tools=c(
View(params)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350)
"tools"=c(
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350,
tools=c(
"anchor","axe")
)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350),
tools=c(
"anchor","axe")
)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350),
tools=c(
"anchor","axe")
)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350),
tools=c(
"anchor","axe")
)
View(event_list)
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=(paste0("yy","mm","dd")),
list(
name="小明",
"是否完成"="True",
"完成所花時間(秒)"=350),
tools=c(
"anchor","axe")
)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("googlesheets4","tidyverse"))
num1 <- c(1, 5, -3)
num2 <- c(33.5, 12.28, 57)
num3 <- c(-2L, 4L, 8L,5L)
num4 <- c(0.1, 0.22)
num5 <- 3.3
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
course$course$time_place -> time_place
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
print(numerals_Gujarati)
receipts300[[૧]] <- 1
receipts300[["૧"]] <- 1
# sum300
receipts300[["૧"]] <- 1
receipts300[["૨"]] <- 2
# sum300
print(numerals_Gujarati)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
print(numerals_Gujarati)
sum(receipts300[["૧"]])
sum(receipts300["૧"])
library(jsonlite); library(readr)
fromJSON("https://www.dropbox.com/s/b59ye5qoxnwhzu9/poem_song.json?dl=1", simplifyDataFrame = F) -> poem_song
fromJSON("https://www.dropbox.com/s/mjvaqdu4gufblag/poem_new.json?dl=1", simplifyDataFrame = F) -> poem_new
read.csv("https://www.dropbox.com/s/oyzvb3d05igb05e/poem_songOrder.csv?dl=1")$x -> poem_songOrder
View(poem_song)
poem_song[[136]] <- list(poem_new)
# poem_song
View(poem_song)
poem_song[[136]] <- poem_new
# poem_song
View(poem_song)
poem_song[[22]][["paragraphs"]] <- c("斗柄仙城曉，龍鱗下隰通。","三竿眺羲馭，十里過商中。", "水藉天容碧，塵依驛轍紅。"," 喜聞何力語，應爲樂秋豐。")
# poem_song
View(poem_song)
install.packages("rvest")
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rvest_0.3.5.zip'
source('https://cran.rstudio.com/bin/windows/contrib/3.6/rvest_0.3.5.zip')
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
View(post)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
chr_fiveReceipts <- as.character(fiveReceipts)
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
chr_fiveReceipts <- as.character(fiveReceipts)
# chr_fiveReceipts
chr_fiveReceipts <- as.character(fiveReceipts)
# chr_fiveReceipts
chr_fiveReceipts <- as.character(fiveReceipts)
chr_fiveReceipts
post[["comments"]][["gender"]] <- as.factor("gender")
# post
post[["comments"]][["gender"]] <- as.factor(c("gender"))
# post
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
post[["comments"]][["gender"]] <- as.factor(c("gender"))
# post
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
c(post[["comments"]][["gender"]]) <- 33
as.factor(post[["comments"]][["gender"]])
# post
View(post)
as.factor(post[["comments"]][["gender"]])
as.integer(post[["comments"]][["hearts"]])
# post
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
as.factor(post[["comments"]][["gender"]])
as.integer(post[["comments"]][["hearts"]])
class(post[["comments"]][["gender"]])
# post
as.factor(post[["comments"]][["gender"]])
as.integer(post[["comments"]][["hearts"]])
class(post[["comments"]][["hearts"]])
# post
as.factor(post[["comments"]][["gender"]])
as.integer(c(post[["comments"]][["hearts"]]))
class(post[["comments"]][["hearts"]])
# post
as.factor(post[["comments"]][["gender"]])
as.numeric(c(post[["comments"]][["hearts"]]))
class(post[["comments"]][["hearts"]])
# post
a <- "我叫"
b <- c("小明","阿美")
paste0(a,b)
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- "hearts3"
as.numeric("hearts3")
class(post[["comments"]][["hearts"]])
# post
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- "hearts3"
hearts3
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- "hearts3"
"hearts3"
class(post[["comments"]][["hearts"]])
# post
"૧" <- 1
sum(receipts300["૧"])
"૧" <- 1
sum(receipts300[1])
"૧" <- 1
sum(receipts300)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <-
class(post[["comments"]][["hearts"]])
# post
as.factor(post[["comments"]][["gender"]])
as.numeric(post[["comments"]][["hearts"]]) <-
class(post[["comments"]][["hearts"]])
as.factor(post[["comments"]][["gender"]])
as.numeric(post[["comments"]][["hearts"]])
class(post[["comments"]][["hearts"]])
# post
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
as.factor(post[["comments"]][["gender"]])
as.numeric(post[["comments"]][["hearts"]])
class(post[["comments"]][["hearts"]])
# post
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- (31,11,31,11,1,0,0,0,0,7,1,8,3,0,0,1,0,2,2,0,0,0,3,1,0)
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- (31,11,31,11,1,0,0,0,0,7,1,8,3,0,0,1,0,2,2,0,0,0,3,1,0)
as.factor(post[["comments"]][["gender"]])
post[["comments"]][["hearts"]] <- c(31,11,31,11,1,0,0,0,0,7,1,8,3,0,0,1,0,2,2,0,0,0,3,1,0)
class(post[["comments"]][["hearts"]])
# post
post[["comments"]][["DateTime"]]
# post
post[["comments"]][["DateTime"]]
ymd_hms("4月20日 14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
# post
post[["comments"]][["DateTime"]]
ymd_hms("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
# post
post[["comments"]][["DateTime"]]
md_hms("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
post[["comments"]][["DateTime"]]
a <- 2020年
post[["comments"]][["DateTime"]]
a <- "2020年"
b <- c("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
ymd_hms(paste0(a,b))
# post
post[["comments"]][["DateTime"]]
a <- "2020年"
b <- c("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020年"
b <- c("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020年"
b <- c("4月20日_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
ymd_hms(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020."
b <- c("4.20_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
ymd_hms(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020-"
b <- c("4-20_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
ymd_hms(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020-"
b <- c("4-20_14:50","4月20日 14:51","4月20日 14:50","4月20日 14:51","4月20日 15:14","4月20日 16:26","4月20日 16:36","4月20日 16:58","4月20日 17:18","4月20日 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
ymd_hm(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020-"
b <- c("4-20_14:50","4-20 14:51","4-20 14:50","4-20 14:51","4-20 15:14","4-20 16:26","4-20 16:36","4-20 16:58","4-20 17:18","4-20 17:29","4月20日 17:40","4月20日 22:58","4月20日 23:19","4月20日 23:22","4月20日 23:24","4月20日 23:36","4月20日 23:55","4月21日 00:02","4月21日 00:40","4月21日 00:51","4月21日 00:56","4月21日 00:59","4月21日 01:00","4月21日 07:23","4月21日 09:12")
paste0(a,b)
ymd_hm(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
post[["comments"]][["DateTime"]]
a <- "2020-"
b <- c("4-20_14:50","4-20 14:51","4-20 14:50","4-20 14:51","4-20 15:14","4-20 16:26","4-20 16:36","4-20 16:58","4-20 17:18","4-20 17:29","4-20 17:40","4-20 22:58","4-20 23:19","4-20 23:22","4-20 23:24","4-20 23:36","4-20 23:55","4-21 00:02","4-21 00:40","4-21 00:51","4-21 00:56","4-21 00:59","4-21 01:00","4-21 07:23","4-21 09:12")
paste0(a,b)
ymd_hm(paste0(a,b))
post[["comments"]][["DateTime"]] <- paste0(a,b)
# post
"૧" <- 1
sum(receipts300["૧"])
receipts300["૧"] <- 1
sum(receipts300["૧"])
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
str_extract_all(twoNames, "段(兄|兄弟),look("a(?!c)")")
str_extract_all(twoNames, "段(兄|兄弟),look("兄(?!弟)")")
str_extract_all(twoNames, "段(兄|兄弟),look("'兄'(?!'弟')")")
str_extract_all(twoNames, "段(兄|兄弟),("'兄'(?!'弟')")")
str_extract_all(twoNames, "段(兄|兄弟))
# back_regex
str_extract_all(twoNames, "段(兄|兄弟)")
# back_regex
str_extract_all(twoNames, "段(兄|兄弟)("'兄'(?!'弟')")")
A_regex <- "弟"
str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
# back_regex
str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
# back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
back_regex <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
back_regex <- c(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
context_picked <- str_extract_all(c("P2"))
View(semiGodsSemiDevils)
context_picked <- str_extract_all(data$"section"$"P2")
context_picked <- str_extract_all("data"$"section"$"P2")
context_picked <- semiGodsSemiDevils("data"$"section"$"P2")
context_picked <- semiGodsSemiDevils["data"]$"section"$"P2"
# context_picked
context_picked <- semiGodsSemiDevils["data"]$"P2"
# context_picked
context_picked <- semiGodsSemiDevils["data"]$`P2`
# context_picked
context_picked <- semiGodsSemiDevils["data"]$"P2"
# context_picked
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
context_picked <- semiGodsSemiDevils["data"]$"P2"
# context_picked
back_regex <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
back_regex <- str_extract(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
back_regex <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
back_regex <- str_extract_all(c(twoNames, "段(兄|兄弟)(?!弟)"))
back_regex <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
back_regex <- c(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
back_regex <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
back_regex <- str_extract(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
back_regex <- str_extract((twoNames, "段(兄|兄弟)(?!弟)"),(twoNames,"段(兄|兄弟)"))
back_regex <- str_extract(c(twoNames, "段(兄|兄弟)(?!弟)"),(twoNames,"段(兄|兄弟)"))
back_regex <- str_extract(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex
A_list <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex <- A_list$list1
back_regex
A_list <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex <- A_list$list
back_regex
A_list <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex <- A_list[[1]]
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("googlesheets4","tidyverse"))
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
install.packages("htmlwidgets")
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
str_count(heartSutra,"色") # 計數
str_extract_all(semiGodsSemiDevils,"(?<=段)target_pattern")
# mention_duan
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
context_picked <- str_extract(semiGodsSemiDevils,"[P2]")
context_picked
context_picked <- str_extract(semiGodsSemiDevils,["P2"])
context_picked <- str_extract(semiGodsSemiDevils,[["P2"]])
context_picked <- str_extract(semiGodsSemiDevils,semiGodsSemiDevils[["P2"]])
context_picked <- str_extract(semiGodsSemiDevils,semiGodsSemiDevils$data$P2)
context_picked <- str_extract(semiGodsSemiDevils,semiGodsSemiDevils[[data]][[P2]])
print(semiGodsSemiDevils[["data"]][["P2"]])
context_picked
context_picked <- print(semiGodsSemiDevils[["data"]][["P2"]])
context_picked
context_picked <- print(semiGodsSemiDevils[["data"]][["data.frame"]][["P2"]])
context_picked
str(semiGodsSemiDevils)
context_picked <- print(semiGodsSemiDevils[["data"]][["data.frame"]][["P2"]])
context_picked
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
knitr::opts_chunk$set(echo = TRUE)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
levels(covid19$性別)
covid19$性別 <- factor(covid19$性別,
c("男","女"))
c(
"https://github.com/student1/108-2-78-inclass-practice",
"github.com/student2 / 108-2-56-inclass-practice",
"https://github.com/student3/108-2-56-inclass-practice",
"student4 / 108-2-56-inclass-practice",
"student5"
) -> studentGithubURLs
target_regex <-
"^https://github.com/[:graph:]+/108-2-(56|78)-inclass-practice"
str_detect(studentGithubURLs, target_regex)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
print(population)
class(population) # 判斷出是named integer vector
names(population) # 元素名稱是台灣各縣市
levels(covid19$縣市) # 是名稱字串向量
# 由於population元素值有names，可以用`[名稱字串向量]`取出所要的
levels(covid19$縣市) -> levelsInData
population[levelsInData] -> population
population <- sort(population, decreasing=T)
population
table(covid19$縣市)
table(covid19$縣市)
sort(table(covid19$縣市))
table(covid19$縣市)
sort(table(covid19$縣市),decreasing=T)
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
A_list <- str_extract_all(twoNames, "段(兄|兄弟)(?!弟)")
back_regex <- A_list[[1]]
back_regex
factor1 <- factor(
c("A","A","C","A","D","F","D","D")
)
factor1
levels(factor1) <- c("優","佳","尚可","普")
factor1
factor1 <- factor(
c("A","A","C","A","D","F","D","D")
)
factor1
levels(factor1) <- c("優","佳","尚可","普")#不用一個一格挑出來改
factor1
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
levels(factor1)
levels(factor1) <- c("中部","北部","北部","中部","北部","中部")
factor1
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
levels(factor1) #要先檢查LEVEL跑出來的結果順序
levels(factor1) <- c("中部","北部","北部","中部","北部","中部") #依據檢察的LEVEL結果重新改名
factor1
